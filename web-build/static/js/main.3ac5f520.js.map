{"version":3,"file":"static/js/main.3ac5f520.js","mappings":"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","sources":["config.js","src/Login.js","src/Signup.js","src/HomePage.js","src/Profile.js","src/CreateRoom.js","src/SearchUser.js","src/JoinRoom.js","src/JoinRoomByName.js","src/AssignChore.js","src/ViewAllChores.js","src/ShoppingList.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["//setting up fire base\n// Importing required modules from Firebase SDK\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/functions';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB6BbEHdeZpWAKxgyTOxhu-173JoOIEjXc\",\n  authDomain: \"house-hold-chores-app.firebaseapp.com\",\n  databaseURL: \"https://house-hold-chores-app-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"house-hold-chores-app\",\n  storageBucket: \"house-hold-chores-app.appspot.com\",\n  messagingSenderId: \"448982541181\",\n  appId: \"1:448982541181:web:d405e031d8ac0fdef8e214\",\n  measurementId: \"G-81174C5G3L\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport { Text, TextInput, View, TouchableOpacity, StyleSheet, Image, Modal } from 'react-native';\nimport firebase from '../config';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isModalVisible: false,\n      modalMessage: ''\n    };\n  }\n  //toggle modal open and close\n  closeModal = () => {\n    this.setState({ isModalVisible: false });\n  };\n\n  showModal = (message) => {\n    this.setState({\n      isModalVisible: true,\n      modalMessage: message,\n    });\n    setTimeout(() => {\n      this.setState({ isModalVisible: false });\n    }, 2000);\n  };\n\n  //validate user inputed data, if user existssign user in, navigate to homepage\n  loginUser = async (email, password) => {\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n      // login successful, proceed to next screen\n      navigation.navigate('HomePage');\n    }\n    catch (error) {\n      // handle login errors\n      if (error.code === \"auth/invalid-email\") {\n        this.showModal('Invalid email address');\n        return;\n      }\n      else if (error.code === \"auth/user-disabled\") {\n        this.showModal('IUser account has been disabled');\n        return;\n      }\n      else if (error.code === \"auth/user-not-found\") {\n        this.showModal('User not found');\n        return;\n      }\n      else if (error.code === \"auth/wrong-password\") {\n        this.showModal('Incorrect password');\n        return;\n      }\n      else {\n        this.showModal('Login failed. Please try again later');\n        return;\n      }\n    }\n  }\n\n  //Call to method to validate data and login user\n  login = () => {\n    const isValid = this.validData(); // validate the input data\n    if (isValid) {\n      const { email, password } = this.state;\n      this.loginUser(email, password);\n    }\n  }\n\n  //validation of user input\n  validData = () => {\n\n    const { email, password } = this.state;\n\n    // make sure email and password isnt empty\n    if (email == \"\" || password == \"\") {\n      this.showModal('Ensure no fields are empty');\n      return;\n    }\n\n    if (typeof email != \"string\" || typeof password != \"string\") {\n      this.showModal('Enter valid characters');\n      return;\n    }\n    return true;\n  }\n\n  //what user sees\n  render() {\n    const navigation = this.props.navigation;\n    return (\n      <View style={styles.container}>\n        <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/BackgroundNew.jpg')} style={{\n          position: 'absolute',\n          zIndex: -1,\n          width: '100%',\n          height: '100%',\n          opacity: 0.5,\n        }} />\n\n        <Text style={styles.title} >Chores DO IT</Text>\n\n        <TextInput style={styles.emailPasswordInput}\n          placeholder=\"Email\"\n          onChangeText={email => this.setState({ email })}\n          value={this.state.email}\n          placeholderTextColor=\"gray\"\n        />\n\n        <TextInput style={styles.emailPasswordInput}\n          placeholder=\"Password\"\n          onChangeText={password => this.setState({ password })}\n          value={this.state.password}\n          secureTextEntry={true}\n          placeholderTextColor=\"gray\"\n        />\n\n        <TouchableOpacity style={styles.loginButton}\n          onPress={this.login}>\n          <Text>log in</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles.createButton}\n          onPress={() => navigation.navigate('SignUp')}>\n          <Text>Create Account</Text>\n        </TouchableOpacity>\n\n        <Modal\n          transparent={true}\n          visible={this.state.isModalVisible}\n          animationType='slide'\n          onRequestClose={() => {\n            this.closeModal();\n          }}>\n          <View style={styles.modal}>\n            <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n          </View>\n        </Modal>\n\n\n      </View>\n    );\n  }\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    paddingTop: 20,\n    paddingHorizontal: 20,\n  },\n  title: {\n    color: 'black',\n    fontSize: 50,\n    fontWeight: 'bold',\n    marginVertical: '5%',\n  },\n  emailPasswordInput: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    width: '100%',\n    height: 50,\n    marginVertical: '2%',\n    paddingHorizontal: 5,\n    color: 'black',\n  },\n\n  loginButton: {\n    marginVertical: 10,\n    padding: 10,\n    width: '75%',\n    textAlign: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#c8ada4',\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: 'black',\n  },\n  createButton: {\n    marginVertical: 10,\n    padding: 10,\n    width: '75%',\n    textAlign: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#c8ada4',\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: 'black',\n  },\n  modalContainer: {\n    // flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalText: {\n    color: 'white',\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 20,\n    backgroundColor: '#E2C2C6',\n    borderRadius: 10,\n  },\n});","import React, { Component } from 'react';\nimport { Text, TextInput, View, Image, Modal, TouchableOpacity, StyleSheet } from 'react-native';\nimport firebase from '../config';\nimport validator from 'validator';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      isModalVisible: false,\n      modalMessage: ''\n    };\n  }\n  //Toggle and close modal\n  closeModal = () => {\n    this.setState({ isModalVisible: false });\n  };\n\n  showModal = (message) => {\n    this.setState({\n      isModalVisible: true,\n      modalMessage: message,\n    });\n    setTimeout(() => {\n      this.setState({ isModalVisible: false });\n    }, 2000);\n  };\n\n  //Validate email and pass\n  validateEmail = (email) => {\n    return validator.isEmail(email);\n  }\n\n  validatePassword = (password) => {\n    return validator.isStrongPassword(password);\n  }\n\n  //Register user\n  registerUser = async (firstName, lastName, email, password) => {\n    try {\n      //send email and pass fields user entered to firebase auth \n      const { user } = await firebase.auth().createUserWithEmailAndPassword(email, password);\n\n      //Create users collection, set fields, user id fields becomes the user id located within firebase auth\n      if (user) {\n        await firebase.firestore().collection('users')\n          .doc(user.uid)\n          .set({\n            firstName,\n            lastName,\n            email,\n            user_id: user.uid,\n          });\n        this.showModal('User Created Successfully');\n        return;\n      }\n      else {\n        this.showModal('User not created');\n        return;\n      }\n    }\n    //Error validation\n    catch (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        this.showModal('Email already in use');\n        return;\n      }\n      else if (error.code === 'auth/weak-password') {\n        this.showModal('Password is too weak');\n        return;\n      }\n      else {\n        console.log(error.message);\n      }\n    }\n  }\n\n  // Call to validate user input and then register user\n  signUp = async () => {\n    const { firstName, lastName, email, password, confirmPassword } = this.state;\n    this.setState({ modalMessage: '' }); // clear error message\n    const isValid = this.validData(); // validate the input data\n    if (isValid) {\n      try {\n        await this.registerUser(firstName, lastName, email, password);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  //Validate user input\n  validData = () => {\n    const { firstName, lastName, email, password, confirmPassword } = this.state;\n\n    // make sure email and password are not empty\n    if (firstName == '' || lastName == '' || email == '' || password == '' || confirmPassword == '') {\n      this.showModal('Ensure no fields are empty');\n      return;\n    }\n\n    if (!this.validateEmail(email)) {\n      this.showModal('Email invalid format');\n      return;\n    }\n\n    if (!this.validatePassword(password)) {\n      this.showModal('Enter stronger password');\n      return;\n    }\n\n    if (confirmPassword != password) {\n      this.showModal('Passwords must match');\n      return;\n    }\n    return true;\n  }\n\n  render() {\n\n    const navigation = this.props.navigation;\n    return (\n\n      <View style={styles.container}>\n        <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/BackgroundNew.jpg')} style={{\n          position: 'absolute',\n          zIndex: -1,\n          width: '100%',\n          height: '100%',\n          opacity: 0.5,\n        }} />\n\n        <Text style={styles.title} >Chores DO IT</Text>\n\n        <TextInput style={styles.emailPasswordInput}\n          placeholder='Forename'\n          onChangeText={firstName => this.setState({ firstName })}\n          value={this.state.firstName}\n          placeholderTextColor=\"gray\"\n        />\n\n        <TextInput style={styles.emailPasswordInput}\n          placeholder='Surname'\n          onChangeText={lastName => this.setState({ lastName })}\n          value={this.state.lastName}\n          placeholderTextColor=\"gray\"\n        />\n\n        <TextInput style={styles.emailPasswordInput}\n          placeholder=\"Email\"\n          onChangeText={email => this.setState({ email })}\n          value={this.state.email}\n          placeholderTextColor=\"gray\"\n        />\n\n        <TextInput style={styles.emailPasswordInput}\n          placeholder=\"Password\"\n          onChangeText={password => this.setState({ password })}\n          value={this.state.password}\n          secureTextEntry={true}\n          placeholderTextColor=\"gray\"\n        />\n\n        <TextInput style={styles.emailPasswordInput}\n          placeholder=\"Confirm Password\"\n          onChangeText={confirmPassword => this.setState({ confirmPassword })}\n          value={this.state.confirmPassword}\n          secureTextEntry={true}\n          placeholderTextColor=\"gray\"\n        />\n\n        <TouchableOpacity style={styles.loginButton}\n          onPress={this.signUp}>\n          <Text>Sign Up</Text>\n        </TouchableOpacity>\n\n        <Modal\n          transparent={true}\n          visible={this.state.isModalVisible}\n          animationType='slide'\n          onRequestClose={() => {\n            this.closeModal();\n          }}\n        >\n          <View style={styles.modal}>\n            <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n          </View>\n        </Modal>\n\n\n      </View >\n    );\n  }\n}\n\nexport default SignUp\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    paddingTop: 50,\n    paddingHorizontal: 20,\n  },\n  title: {\n    color: 'black',\n    fontSize: 50,\n    fontWeight: 'bold',\n    marginVertical: '5%',\n  },\n  emailPasswordInput: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    width: '100%',\n    height: 30,\n    marginVertical: '2%',\n    paddingHorizontal: 5,\n    color: 'black',\n  },\n  loginButton: {\n    marginVertical: 10,\n    padding: 10,\n    width: 300,\n    textAlign: 'center',\n    backgroundColor: '#c8ada4',\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: 'black',\n  },\n  modalContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalText: {\n    color: 'white',\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 20,\n    backgroundColor: '#E2C2C6',\n    borderRadius: 10,\n  },\n});\n","import React, { Component } from 'react';\nimport { Text, SafeAreaView, Modal, View, TouchableOpacity, StyleSheet, FlatList, Image, Picker } from 'react-native';\nimport firebase from '../config';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            userRoom: [],\n            chores: [],\n            updatedChores: [],\n            isModalVisible: false,\n            modalMessage: ''\n        };\n    }\n\n    //toggle modal open and close\n    closeModal = () => {\n        this.setState({ isModalVisible: false });\n    };\n\n    showModal = (message) => {\n        this.setState({\n            isModalVisible: true,\n            modalMessage: message,\n        });\n        setTimeout(() => {\n            this.setState({ isModalVisible: false });\n        }, 2000);\n    };\n\n    //Check if user authenticated, if not log user out\n    componentDidMount() {\n        const userId = firebase.auth().currentUser.uid;\n\n        firebase\n            .firestore()\n            .collection('users')\n            .doc(userId)\n            .get()\n            .then(snapshot => {\n                //is user exists display room data\n                if (snapshot.exists) {\n                    this.setState({ name: snapshot.data() });\n                    this.getRooms();\n                    //else show response of user not found\n                }\n                else {\n                    this.showModal('User not found');\n                    return;\n                }\n            });\n\n        //Checks for any changes such as user logging in or out\n        this.interval = setInterval(() => this.getChoresData(), 8000);\n        this.unsubscribe = firebase.auth().onAuthStateChanged(user => {\n            this.unsubscribe = this.props.navigation.addListener('focus', () => {\n                this.getRooms();\n                //if user not signed in, modal is shown and user is navigated to login page\n                if (!user) {\n                    this.showModal('User signed out');\n                    navigation.navigate('Login');\n                    return;\n                }\n            });\n        });\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n        this.unsubscribe();\n    }\n\n    // get room data to show if a user is a member of a room\n    getRooms = async () => {\n        //Check if user is logged in \n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n\n        // Get a reference to the Rooms collection and documents in Rooms\n        const roomsRef = firebase.firestore().collection('Rooms');\n        const snapshot = await roomsRef.get();\n\n        // Initialize arrays to hold all rooms and the user's room\n        const rooms = [];\n        const userRoom = [];\n\n        // Loop through all documents in the Rooms collection\n        snapshot.forEach(doc => {\n            const data = doc.data();\n\n            // Create a new room object with the document ID, room name, members, and room URL\n            const room = {\n                id: doc.id,\n                roomName: data.roomName,\n                members: data.members,\n                roomURL: data.roomUrl,\n                createdBy: data.createdBy,\n                createdAt: data.createdAt\n            };\n            // Add the new room object to the rooms array\n            rooms.push(room);\n        });\n\n        // Loop through all rooms and add the user's room to the userRoom array\n        try {\n            for (let i = 0; i < rooms.length; i++) {\n                const room = rooms[i];\n                // Check if the members array includes the user's ID\n                if (room.members.includes(userId)) {\n                    this.state.userRoom.push(room);\n                }\n            }\n            this.setState({ userRoom: this.state.userRoom });\n            console.log(this.state.userRoom)\n            await this.getChoresData();\n        }\n        catch (error) {\n            this.showModal('Error displaying room: ', error);\n            return;\n        }\n    };\n\n    getChoresData = async () => {\n        try {\n            const userId = firebase.auth().currentUser.uid;\n            //Check if user is logged in and authenticated\n            if (!userId) {\n                this.showModal('User is not authenticated');\n                return;\n            }\n            //if user is not in a room, set chores array to empty, render no chores\n            if (this.state.userRoom.length === 0) {\n                this.setState({ chores: [] });\n                return;\n            }\n\n            // Get the room ID of the user's current room.\n            const roomId = this.state.userRoom[0].id;\n            // Get a reference to the collection of tasks for the current room. get a snapshot of all tasks within the Room\n            const choresRef = firebase.firestore().collection('Rooms').doc(roomId).collection('tasks');\n            const snapshot = await choresRef.get();\n            //map each task to an object that includes the task data and the assigned user's first and last name.\n            const chores = snapshot.docs.map(async (doc) => {\n                const assignedUserId = doc.data().currentlyAssignedTo;\n                // if assigneduserid is not null, get the first and last name of user the task is assigned to and all other data of the task\n                if (assignedUserId) {\n                    const userDoc = await firebase.firestore().collection('users').doc(assignedUserId).get();\n                    const { firstName, lastName } = userDoc.data();\n                    return { id: doc.id, firstName, lastName, ...doc.data() };\n\n                }\n            });\n            // Wait for all the mapped task objects to be resolved, filter out any undefined objects\n            // Set the state of the component with the resulting array of assigned chores.\n            const assignedChores = await Promise.all(chores);\n            this.setState({ chores: assignedChores.filter(chore => chore !== undefined) });\n        }\n        catch (error) {\n            this.showModal('Error displaying chores:', error);\n            return;\n        }\n    };\n\n\n    //Handle a  completed chore\n    handleChoreCheck = (chore) => {\n        //Check if user is logged in and authenticated\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n        //get room id of users current room\n        const roomId = this.state.userRoom[0].id;\n\n        // Retrieve a reference to all tasks that match the given chore ID\n        const tasksRef = firebase.firestore()\n            .collection('Rooms')\n            .doc(roomId)\n            .collection('tasks')\n            .where('taskId', '==', chore.id);\n\n        tasksRef.get().then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                // get data in tasks sub collection\n                const taskData = doc.data();\n\n                // check if the current user is assigned to the chore\n                if (taskData.currentlyAssignedTo === userId) {\n                    // update chore with the current user as the last completed by, set currentlyAssignedTo to empty, and update lastCompletedAt with the server timestamp\n                    doc.ref.update({\n                        lastCompletedAt: firebase.firestore.FieldValue.serverTimestamp(),\n                        lastCompletedBy: taskData.currentlyAssignedTo,\n                        currentlyAssignedTo: '',\n                    })\n                        .then(() => {\n                            this.getChoresData();\n                        })\n                        .catch((error) => {\n                            this.showModal('Error updating chore');\n                            return;\n                        });\n                }\n                // If the current user is not assigned to the chore, show a modal\n                else {\n                    this.showModal('Chore is not assigned to the current user');\n                    return;\n                }\n            });\n        })\n            .catch((error) => {\n                this.showModal('Error please try later: ', error,);\n                return;\n            });\n    }\n\n    //user leaving room\n    leaveRoom = async (roomId) => {\n        try {\n            //Check if user is logged in and authenticated\n            const userId = firebase.auth().currentUser.uid;\n            if (!userId) {\n                this.showModal('User is not authenticated');\n                return;\n            }\n\n            // Get a reference to the room document in Firestore and tasks subcollection\n            const roomRef = firebase.firestore().collection('Rooms').doc(roomId);\n            const taskRef = roomRef.collection('tasks');\n\n            // Remove the user's ID from the members array\n            await roomRef.update({\n                members: firebase.firestore.FieldValue.arrayRemove(userId)\n            });\n\n            // Set assignedTo field to empty for any task documents where it matches the user's ID\n\n            const taskDocs = await taskRef.where('currentlyAssignedTo', '==', userId).get();\n            taskDocs.forEach(doc => {\n                doc.ref.update({\n                    currentlyAssignedTo: ''\n                });\n            });\n            // Show modal and call to get rooms to show user is no longer in room\n            this.showModal('You have left the room');\n            this.setState({\n                userRoom: [],\n                chores: []\n            });\n            this.getRooms();\n        }\n        catch (error) {\n            this.showModal('Error leaving room: ');\n            return;\n        }\n    }\n\n    render() {\n        const navigation = this.props.navigation;\n        const userIsInRoom = this.state.userRoom.length > 0;\n        return (\n            <SafeAreaView style={styles.container}>\n                <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/inAppColour.avif')} style={{\n                    position: 'absolute',\n                    zIndex: -1,\n                    width: '100%',\n                    height: '100%',\n                    opacity: 0.5,\n                    borderRadius: 20\n                }} />\n\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    backgroundColor: '#FEFFEB',\n                    height: '8%',\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    borderRadius: 20\n                }}>\n                    <View style={styles.houseName}>\n                        <Text style={styles.houseNameText}>{this.state.userRoom.length > 0 ? this.state.userRoom[0].roomName : ''}</Text>\n                    </View>\n                </View>\n\n                <View style={{\n                    paddingBottom: 40,\n                    paddingTop: 15,\n                    borderBottomWidth: 1,\n                    borderColor: 'black',\n\n                }}>\n\n                    <TouchableOpacity onPress={() => this.props.navigation.navigate('CreateRoom')}>\n                        <Image\n                            source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/create.png')}\n                            style={{\n                                position: 'absolute',\n                                width: '8%',\n                                height: '5%',\n                                top: 0,\n                                right: 0,\n                                paddingHorizontal: 20,\n                                paddingVertical: 20,\n                                marginRight: 130\n                            }}\n                        />\n                    </TouchableOpacity>\n\n                    <TouchableOpacity onPress={() => this.props.navigation.navigate('JoinRoomByName')}>\n                        <Image\n                            source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/JoinHouse.png')}\n                            style={{\n                                position: 'absolute',\n                                width: '8%',\n                                height: '5%',\n                                top: 0,\n                                right: 0,\n                                paddingHorizontal: 20,\n                                paddingVertical: 20,\n                                marginRight: 70\n                            }}\n                        />\n                    </TouchableOpacity>\n\n                    <TouchableOpacity disabled={!userIsInRoom} onPress={() => this.leaveRoom(this.state.userRoom[0].id)}>\n                        <Image\n                            source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/leaveRoom.png')}\n                            style={{\n                                position: 'absolute',\n                                width: '8%',\n                                height: '5%',\n                                top: 0,\n                                right: 0,\n                                paddingHorizontal: 20,\n                                paddingVertical: 20,\n                                marginRight: 20\n                            }}\n                        />\n                    </TouchableOpacity>\n                </View>\n\n\n                <View style={styles.dataContainer}>\n                    <FlatList\n                        data={this.state.chores}\n                        keyExtractor={item => item.id}\n                        renderItem={({ item }) =>\n                            <View style={styles.choreContainer}>\n\n\n                                <View style={[styles.choreName]}>\n\n                                    <Text style={[styles.choreNameText]}>\n                                        {item.choreName}\n                                    </Text>\n                                    <Text style={[styles.choreDescText]}>\n                                        {item.choreDesc}\n                                    </Text>\n                                    <Text style={styles.assignedToText}>\n                                        Assigned to: {item.firstName} {item.lastName}\n                                    </Text>\n\n                                </View>\n\n                                <View>\n                                    <TouchableOpacity\n                                        style={styles.completeButton}\n                                        onPress={() => this.handleChoreCheck(item)}>\n                                        <MaterialIcons name={'check-box'} size={30} />\n                                    </TouchableOpacity>\n                                </View>\n\n                            </View>\n                        }\n                    />\n                </View>\n\n                <View style={{\n                    position: 'absolute',\n                    bottom: 0,\n                    width: '100%',\n                    flexDirection: 'row',\n                    justifyContent: 'space-evenly',\n                    alignItems: 'center',\n                }}>\n                    <TouchableOpacity style={styles.ViewStyle} disabled={!userIsInRoom} onPress={() => this.props.navigation.navigate(\"ViewAllChores\")}>\n                        <Image\n                            source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/ViewAll.png')}\n                            style={styles.imageStyle}\n                        />\n                    </TouchableOpacity>\n\n                    <TouchableOpacity style={styles.addStyle} disabled={!userIsInRoom} onPress={() => this.props.navigation.navigate(\"AssignChore\")}>\n                        <Image style={styles.addimageStyle} source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/pluscircle.png')} />\n\n                    </TouchableOpacity>\n                </View>\n                <Modal\n                    transparent={true}\n                    visible={this.state.isModalVisible}\n                    animationType='slide'\n                    onRequestClose={() => {\n                        this.closeModal();\n                    }}>\n                    <View style={styles.modal}>\n                        <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n                    </View>\n                </Modal>\n            </SafeAreaView>\n        );\n    }\n}\nexport default HomePage\n\nconst styles = StyleSheet.create({\n\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 20,\n        backgroundColor: '#F8F8F8',\n\n    },\n    houseName: {\n        width: '100%',\n        paddingLeft: 20,\n        marginTop: 15,\n        paddingBottom: 10,\n    },\n    houseNameText: {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    dataContainer: {\n        width: '100%',\n        height: '70%'\n    },\n    choreContainer: {\n        alignItems: 'flex-start',\n        marginBottom: 0,\n        paddingTop: 20,\n        paddingLeft: 20,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n    },\n\n    choreName: {\n        width: '90%'\n    },\n    choreNameText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        width: '100%',\n        paddingBottom: 1\n    },\n    choreDescText: {\n        fontSize: 15,\n        width: '100%',\n        paddingBottom: 4\n    },\n    assignedToText: {\n        fontSize: 15,\n        width: '100%',\n        paddingBottom: 4\n    },\n    completeButton: {\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        paddingRight: 20,\n    },\n    ViewStyle: {\n        marginLeft: 50,\n        marginBottom: 10,\n    },\n    addStyle: {\n\n        marginRight: 50,\n        marginBottom: 10,\n\n    },\n    addimageStyle: {\n        width: 70,\n        height: 70,\n    },\n    imageStyle: {\n        width: 60,\n        height: 60,\n    },\n    modalContainer: {\n        // flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modalText: {\n        color: 'white',\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        padding: 20,\n        backgroundColor: '#E2C2C6',\n        borderRadius: 10,\n    }\n});\n\n// if user leaves room, re render the page so it shows he isnt in a room","import React, { Component } from 'react';\nimport { Text, SafeAreaView, TextInput, View, Image, Modal, TouchableOpacity, StyleSheet } from 'react-native';\nimport firebase from '../config';\nimport validator from 'validator';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            user: null,\n            users: [],\n            loading: true,\n            error: null,\n            isModalVisible: false,\n            modalMessage: ''\n        };\n    }\n    componentDidMount() {\n        this.getInfo();\n    }\n    //Toggle modal open or close\n    closeModal = () => {\n        this.setState({ isModalVisible: false });\n    };\n\n    showModal = (message) => {\n        this.setState({\n            isModalVisible: true,\n            modalMessage: message,\n        });\n        setTimeout(() => {\n            this.setState({ isModalVisible: false });\n        }, 2000);\n    };\n\n    //validate email\n    validateEmail = (email) => {\n        return validator.isEmail(email);\n    }\n\n    getInfo = async () => {\n        const user = firebase.auth().currentUser.uid;\n        //check if user is authenticated and logged in\n        if (!user) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n        //If user is set states of first,last name and email, later rendered\n        const userRef = firebase.firestore().collection('users').doc(user);\n        const snapshot = await userRef.get();\n        const userData = snapshot.data();\n        this.setState({\n            firstName: userData.firstName,\n            lastName: userData.lastName,\n            email: userData.email\n        });\n    };\n\n    updateInfo = async () => {\n        //check if user is logged in\n        const user = firebase.auth().currentUser.uid;\n        if (!user) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n\n\n        // Check if firstName, lastName and email are not empty\n        if (!this.state.firstName || !this.state.lastName || !this.state.email) {\n            this.showModal('Ensure no fields are empty');\n            return;\n        }\n\n        // Check if the email is valid\n        if (!this.validateEmail(this.state.email)) {\n            this.showModal('Email invalid format');\n            return;\n        }\n        //If validations complete and are okay, then allow users input to be set as the new states of firstname, lastname or email\n        firebase\n            .firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser.uid)\n            .update({\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n            })\n            .then(() => {\n                this.showModal('Update Complete');\n                return;\n            })\n            .catch((error) => {\n                console.log(error);\n                this.showModal('Error updating user data');\n                return;\n            });\n    };\n\n    render() {\n        const navigation = this.props.navigation;\n        return (\n            <View style={styles.container}>\n\n                <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/inAppColour.avif')} style={{\n                    position: 'absolute',\n                    zIndex: -1,\n                    width: '100%',\n                    height: '100%',\n                    opacity: 0.5,\n                    borderRadius: 20\n                }} />\n\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    backgroundColor: '#FEFFEB',\n                    height: '8%',\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    borderRadius: 20\n                }}>\n                    <Text style={styles.headerText}>Chores Do it</Text>\n                </View>\n\n                <View style={{\n                    paddingTop: '50%',\n                    paddingHorizontal: '5%'\n                }}>\n                    <TextInput\n                        style={styles.inputBox}\n                        placeholder=\"First Name\"\n                        placeholderTextColor=\"gray\"\n                        onChangeText={(text) => this.setState({ firstName: text })}\n                        value={this.state.firstName}\n                    />\n\n                    <TextInput\n                        style={styles.inputBox}\n                        placeholder=\"Last Name\"\n                        placeholderTextColor=\"gray\"\n                        onChangeText={(text) => this.setState({ lastName: text })}\n                        value={this.state.lastName}\n                    />\n\n                    <TextInput style={styles.inputBox}\n                        placeholder=\"Email\"\n                        placeholderTextColor=\"gray\"\n                        onChangeText={(text) => this.setState({ email: text })}\n                        value={this.state.email}\n                    />\n                    <View>\n                        <TouchableOpacity style={styles.buttonDesign} onPress={() => this.updateInfo()}>\n                            <Text style={styles.buttonDesignText}>Update</Text>\n                        </TouchableOpacity>\n\n                        <TouchableOpacity\n                            style={styles.buttonDesign}\n                            onPress={() => {\n                                firebase\n                                    .auth()\n                                    .signOut()\n                                    .then(() => {\n                                        console.log('Logout successful');\n                                    })\n                                    .catch((error) => {\n                                        this.setState({\n                                            isModalVisible: true,\n                                            modalMessage: 'Logout failed', error,\n                                        });\n                                        setTimeout(() => {\n                                            this.setState({ isModalVisible: false });\n                                        }, 2000);\n                                    });\n                            }}>\n                            <Text style={styles.buttonDesignText}>Logout</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n                <Modal\n                    transparent={true}\n                    visible={this.state.isModalVisible}\n                    animationType='slide'\n                    onRequestClose={() => {\n                        this.closeModal();\n                    }}>\n                    <View style={styles.modal}>\n                        <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n                    </View>\n                </Modal>\n            </View>\n        );\n    }\n}\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 20,\n    },\n    headerText: {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: '600',\n        marginLeft: 20,\n    },\n    inputBox: {\n        borderWidth: 1,\n        borderColor: '#D9D9D9',\n        borderRadius: 5,\n        width: '100%',\n        height: 50,\n        marginTop: 10,\n        fontSize: 16,\n    },\n    buttonDesign: {\n        marginVertical: 10,\n        padding: 10,\n        width: '75%',\n        textAlign: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#c8ada4',\n        borderColor: 'black',\n        backgroundColor: '#c8ada4',\n        padding: 10,\n        borderRadius: 5,\n        width: '100%',\n    },\n    buttonDesignText: {\n        color: '#FFFFFF',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    modalContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modalText: {\n        color: 'white',\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        padding: 20,\n        backgroundColor: '#E2C2C6',\n        borderRadius: 10,\n    },\n})\n\n\n","// if user is in a room he can not create a new one\nimport React, { Component } from 'react';\nimport { Text, TextInput, View, Image, Modal, TouchableOpacity, StyleSheet, FlatList } from 'react-native';\nimport { v4 as uuidv4 } from 'uuid';\nimport firebase from '../config';\nimport { Ionicons } from '@expo/vector-icons';\n\nexport default class CreateRoom extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            roomName: '',\n            isModalVisible: false,\n            modalMessage: ''\n        };\n    }\n    closeModal = () => {\n        this.setState({ isModalVisible: false });\n    };\n\n    showModal = (message) => {\n        this.setState({\n            isModalVisible: true,\n            modalMessage: message,\n        });\n        setTimeout(() => {\n            this.setState({ isModalVisible: false });\n        }, 2000);\n    };\n\n    createRoom = async () => {\n        try {\n            const userId = firebase.auth().currentUser.uid;\n            if (!userId) {\n                this.showModal('User is not authenticated');\n                return;\n            }\n\n            const { currentUser } = firebase.auth();\n            const { roomName } = this.state;\n            const roomId = uuidv4();\n            const roomRef = firebase.firestore().collection('Rooms').doc(roomId);\n\n\n            if (!roomName) {\n                if (!roomNameQuery.empty) {\n                    this.showModal('Enter a room name');\n                    return;\n                }\n            }\n\n            // Check if room name is already taken\n            const roomNameQuery = await firebase.firestore().collection('Rooms')\n                .where('roomName', '==', roomName)\n                .get();\n            if (!roomNameQuery.empty) {\n                this.showModal('This room name is already taken');\n                return;\n            }\n\n            // Check if user is already in a room\n            const userRooms = await firebase.firestore().collection('Rooms')\n                .where('members', 'array-contains', currentUser.uid)\n                .get();\n            if (!userRooms.empty) {\n                this.showModal('You are already in a room');\n                return;\n            }\n            // When validations complete allow user to create a room\n            await firebase.firestore().runTransaction(async (transaction) => {\n                // Create room document\n                await transaction.set(roomRef, {\n                    roomName,\n                    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n                    id: roomId,\n                    createdBy: currentUser.uid,\n                    members: [currentUser.uid],\n                });\n\n                const tasksRef = roomRef.collection('tasks');\n                const shoppingRef = roomRef.collection('shoppingList');\n                this.showModal('Room created');\n                // Reset the input fields\n                return;\n            });\n            console.log('Room created successfully');\n        }\n        catch (error) {\n            console.log(error.message);\n            // Show error message to the user   \n            this.showModal(error.message,);\n            return;\n        }\n    }\n\n    render() {\n        return (\n\n            <View style={styles.container}>\n                <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/inAppColour.avif')} style={{\n                    position: 'absolute',\n                    zIndex: -1,\n                    width: '100%',\n                    height: '100%',\n                    opacity: 0.5,\n                    borderRadius: 20,\n                }} />\n\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    backgroundColor: '#FEFFEB',\n                    height: '7.5%',\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    borderRadius: 20\n                }}>\n                    <Text style={styles.headerText}>Chores Do it</Text>\n                    <View style={styles.Iconleft}>\n                        <TouchableOpacity onPress={() => this.props.navigation.goBack()}>\n                            <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\n                        </TouchableOpacity>\n                    </View>\n                </View>\n\n                <View style={{\n                    paddingTop: '60%',\n                    paddingHorizontal: '5%'\n                }}>\n                    <Text style={styles.title}>Enter room name</Text>\n\n                    <TextInput style={styles.Roomname}\n                        placeholder='Room Name'\n                        onChangeText={roomName => this.setState({ roomName })}\n                        value={this.state.roomName}\n                        placeholderTextColor=\"gray\"\n                    />\n                    <TouchableOpacity style={styles.button}\n                        onPress={this.createRoom}>\n                        <Text style={styles.buttonText}>create room</Text>\n                    </TouchableOpacity>\n                </View>\n                <Modal\n                    transparent={true}\n                    visible={this.state.isModalVisible}\n                    animationType='slide'\n                    onRequestClose={() => {\n                        this.closeModal();\n                    }}>\n                    <View style={styles.modal}>\n                        <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n                    </View>\n                </Modal>\n            </View >\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 20,\n    },\n    headerText: {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: '600',\n        marginLeft: 50,\n    },\n    Iconleft: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        marginLeft: 15,\n        marginTop: 10,\n    },\n    title: {\n        paddingLeft: '30%',\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    Roomname: {\n        borderWidth: 1,\n        borderColor: '#D9D9D9',\n        borderRadius: 5,\n        width: '100%',\n        height: 50,\n        marginTop: 10,\n        paddingHorizontal: 10,\n        fontSize: 16,\n    },\n\n    button: {\n        backgroundColor: '#c8ada4',\n        padding: 10,\n        borderRadius: 5,\n        marginTop: 10,\n        width: '100%',\n    },\n    buttonText: {\n        color: '#FFFFFF',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    modalContainer: {\n        // flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modalText: {\n        color: 'white',\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        padding: 20,\n        backgroundColor: '#E2C2C6',\n        borderRadius: 10,\n    }\n})","import React, { Component } from 'react';\nimport { Text, TextInput, View, Button, Alert, TouchableOpacity, StyleSheet, FlatList } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport firebase from '../config';\nimport * as MailComposer from 'expo-mail-composer';\nimport { Linking } from 'react-native';\n\nexport default class SearchUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchQuery: '',\n            searchResults: [],\n            isAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        this.checkIsAvailablity();\n    }\n\n    checkIsAvailablity = async () => {\n        const isMailAvailable = await MailComposer.isAvailableAsync();\n        this.setState({ isAvailable: isMailAvailable });\n    }\n\n    searchUsers = async () => {\n        const query = this.state.searchQuery.toLowerCase();\n        const results = [];\n        const snapshot = await firebase.firestore().collection('users').get();\n        snapshot.forEach((doc) => {\n            const data = doc.data();\n            if (\n                data.firstName.includes(query) ||\n                data.lastName.includes(query) ||\n                data.email.includes(query)\n            ) {\n                results.push(data);\n            }\n        });\n        this.setState({ searchResults: results });\n    };\n\n    sendEmail = (email, userId) => {\n        const roomId = this.props.route.params.id;\n        const roomUrl = this.props.route.params.roomUrl;\n        const urlWithRoomId = `${roomUrl}/JoinRoom?roomId=${roomId}&userId=${userId}`;\n        console.log(\"Sending email to:\", email, \"with URL:\", urlWithRoomId);\n\n        MailComposer.composeAsync({\n            subject: \"Join My Room\",\n            body: \"Here's the room URL: \" + urlWithRoomId,\n            recipients: [email],\n        });\n    }\n\n\n\n\n    render() {\n        const roomUrl = this.props.route.params;\n        // console.log(roomUrl)\n        return (\n            <View style={styles.container}>\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Search for a user\"\n                    onChangeText={(text) => this.setState({ searchQuery: text })}\n                />\n                <Button title=\"Search\" onPress={this.searchUsers} />\n                <FlatList\n                    data={this.state.searchResults}\n                    renderItem={({ item }) => (\n                        <TouchableOpacity onPress={() => this.sendEmail(item.email, item.user_id)}>\n                            <Text>{item.firstName} {item.lastName}</Text>\n                        </TouchableOpacity>\n                    )}\n                />\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        paddingTop: 20,\n        paddingHorizontal: 20,\n    },\n});\n","import React, { useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport firebase from '../config';\nimport { useRoute } from '@react-navigation/native';\n\nconst JoinRoom = () => {\n    const route = useRoute();\n    const { roomId, userId } = route.params;\n\n    console.log('roomId:', roomId); // log roomId to the console\n    console.log('userId:', userId); // log userId to the console\n\n    useEffect(() => {\n        if (userId && roomId) {\n            // Add the user to the room using the roomId\n            const roomRef = firebase.firestore().collection('Rooms').doc(roomId);\n            roomRef.update({\n                members: firebase.firestore.FieldValue.arrayUnion(userId),\n            })\n                .then(() => {\n                    console.log('User added to the room');\n                })\n                .catch((error) => {\n                    console.log('Error adding user to the room: ', error);\n                });\n        }\n    }, [roomId, userId]);\n\n    return (\n        <View>\n            <Text>Joining Room...</Text>\n        </View>\n    );\n};\n\nexport default JoinRoom;\n","import React, { Component } from 'react';\nimport { Text, TextInput, View, Image, Modal, TouchableOpacity, StyleSheet, FlatList } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport firebase from '../config';\n\nexport default class JoinRoomByName extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomName: '',\n            user_id: firebase.auth().currentUser.uid,\n            isModalVisible: false,\n            modalMessage: ''\n        };\n    }\n    //toggle modal open and close\n    closeModal = () => {\n        this.setState({ isModalVisible: false });\n    };\n\n    showModal = (message) => {\n        this.setState({\n            isModalVisible: true,\n            modalMessage: message,\n        });\n        setTimeout(() => {\n            this.setState({ isModalVisible: false });\n        }, 2000);\n    };\n    //Validate to see if user can join a room\n    joinRoom = async () => {\n        // Validate the room name.\n        const roomName = this.state.roomName.trim();\n        if (!roomName) {\n            this.showModal('Please enter a room name');\n            return;\n        }\n        //Check to see if user is already in room\n        const userRoomsRef = firebase.firestore().collection('Rooms').where('members', 'array-contains', this.state.user_id);\n        const userRoomsSnapshot = await userRoomsRef.get();\n        if (!userRoomsSnapshot.empty) {\n            this.showModal('You cannot join another room while being in a room');\n            return;\n        }\n\n        // Check if the room exists.\n        const roomsRef = firebase.firestore().collection('Rooms');\n        const querySnapshot = await roomsRef.where('roomName', '==', roomName).get();\n        if (querySnapshot.empty) {\n            this.showModal('Room not found');\n            return;\n        }\n        const roomId = querySnapshot.docs[0].id;\n        const roomRef = roomsRef.doc(roomId);\n\n        // Check if the user has already joined the room.\n        const roomData = await roomRef.get();\n        if (!roomData.exists) {\n            this.showModal('Error joining room');\n            return;\n        }\n        //Check if user is in room already \n        const roomMembers = roomData.data().members;\n        if (roomMembers.includes(this.state.user_id)) {\n            this.showModal('You have already joined this room');\n            return;\n        }\n\n        // Add the user to the room.\n        roomMembers.push(this.state.user_id);\n        try {\n            await roomRef.update({ members: roomMembers });\n            this.showModal(roomName + ' joined successfully');\n        } catch (error) {\n            console.error(error);\n            this.showModal(error.message);\n        }\n    };\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/inAppColour.avif')} style={{\n                    position: 'absolute',\n                    zIndex: -1,\n                    width: '100%',\n                    height: '100%',\n                    opacity: 0.5,\n                    borderRadius: 20\n                }} />\n\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    backgroundColor: '#FEFFEB',\n                    height: '7.5%',\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    borderRadius: 20\n                }}>\n                    <Text style={styles.headerText}>Chores Do it</Text>\n                    <View style={styles.Iconleft}>\n                        <TouchableOpacity onPress={() => this.props.navigation.goBack()}>\n                            <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\n                        </TouchableOpacity>\n                    </View>\n                </View>\n\n                <View style={{\n                    paddingTop: '60%',\n                    paddingHorizontal: '5%'\n                }}>\n                    <Text style={styles.title}> Join a room</Text>\n                    <TextInput\n                        style={styles.roomInput}\n                        placeholder=\"Room name\"\n                        onChangeText={(text) => this.setState({ roomName: text })}\n                        value={this.state.roomName}\n                    />\n                    <TouchableOpacity style={styles.button} onPress={this.joinRoom}>\n                        <Text style={styles.buttonText}>Join Room</Text>\n                    </TouchableOpacity>\n                </View>\n                <Modal\n                    transparent={true}\n                    visible={this.state.isModalVisible}\n                    animationType='slide'\n                    onRequestClose={() => {\n                        this.closeModal();\n                    }}>\n                    <View style={styles.modal}>\n                        <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n                    </View>\n                </Modal>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 20,\n    },\n    headerText: {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: '600',\n        marginLeft: 50,\n    },\n    Iconleft: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        marginLeft: 15,\n        marginTop: 10,\n    },\n    roomInput: {\n        borderWidth: 1,\n        borderColor: '#D9D9D9',\n        borderRadius: 5,\n        width: '100%',\n        height: 50,\n        marginTop: 10,\n        paddingHorizontal: 10,\n        fontSize: 16,\n    },\n    title: {\n        paddingLeft: '35%',\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    button: {\n        backgroundColor: '#c8ada4',\n        padding: 10,\n        borderRadius: 5,\n        marginTop: 10,\n        width: '100%',\n    },\n    buttonText: {\n        color: '#FFFFFF',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    modalContainer: {\n        // flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modalText: {\n        color: 'white',\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        padding: 20,\n        backgroundColor: '#E2C2C6',\n        borderRadius: 10,\n    },\n})","import React, { Component } from 'react';\nimport { Text, TextInput, View, Image, Modal, TouchableOpacity, StyleSheet, Picker } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport firebase from '../config';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class AssignChore extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            choreName: '',\n            choreDesc: '',\n            userRoom: [],\n            members: [],\n            membersId: [],\n            selectedMember: '',\n            isModalVisible: false,\n            modalMessage: ''\n        };\n    }\n\n    //Toggle modal open and closed\n    closeModal = () => {\n        this.setState({ isModalVisible: false });\n    };\n\n    showModal = (message) => {\n        this.setState({\n            isModalVisible: true,\n            modalMessage: message,\n        });\n        setTimeout(() => {\n            this.setState({ isModalVisible: false });\n        }, 2000);\n    };\n\n    componentDidMount() {\n        this.getRooms();\n    }\n    // get room data to show if a user is a member of a room\n    getRooms = async () => {\n        try {\n            const userId = firebase.auth().currentUser.uid;\n            //Check if user is logged in \n            if (!userId) {\n                this.showModal('User is not authenticated');\n                return;\n            }\n\n            // Get a reference to the Rooms collection, get all documents within  Rooms\n            const roomsRef = firebase.firestore().collection('Rooms');\n            const snapshot = await roomsRef.get();\n\n            // Initialize arrays to hold all rooms and the user's room\n            const rooms = [];\n            const userRoom = [];\n\n            // Loop through all documents in the \"Rooms\" collection\n            snapshot.forEach(async (doc) => {\n                const data = doc.data();\n\n                // Create a new room object with the document ID, room name, members, and room URL\n                const room = {\n                    id: doc.id,\n                    roomName: data.roomName,\n                    members: data.members,\n                    roomURL: data.roomUrl,\n                    createdBy: data.createdBy,\n                    createdAt: data.createdAt,\n                };\n\n                // Add the new room object to the rooms array\n                rooms.push(room);\n\n                // Check if the members array includes the user's auth ID\n                if (room.members.includes(userId)) {\n                    userRoom.push(room);\n\n                    // Initialize array to hold member names\n                    const memberNames = [];\n                    const memberId = [];\n\n                    // Loop through all members in the room\n                    for (let i = 0; i < room.members.length; i++) {\n                        const member = room.members[i];\n                        const userRef = firebase.firestore().collection('users').doc(member);\n                        const userSnapshot = await userRef.get();\n                        const userData = userSnapshot.data();\n\n                        // Add member's user_id to the memberId array\n                        memberId.push(userData.user_id);\n                        // Add member's first and last names to the memberNames array\n                        memberNames.push(userData.firstName + ' ' + userData.lastName);\n                    }\n\n                    // Update state with the memberNames array\n                    this.setState({ members: memberNames });\n                    this.setState({ membersId: memberId });\n                }\n            });\n            this.setState({ userRoom });\n        }\n        catch (error) {\n            this.setState({\n                isModalVisible: true,\n                modalMessage: error.message,\n            });\n            setTimeout(() => {\n                this.setState({ isModalVisible: false });\n            }, 2000);\n        }\n    };\n\n    //Creating a task\n    createTask = async () => {\n\n        // Get the selected room object from state\n        const selectedRoom = this.state.userRoom[0];\n        // Get the selected member ID from state\n        const selectedMemberId = this.state.selectedMember;\n\n        //Check if user is logged in \n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n        // Validate inputs\n        if (!this.state.choreName) {\n            this.showModal('Enter a chore name');\n            return;\n        }\n\n        if (this.state.choreDesc.length > 250) {\n            this.showModal('Chore description can not exceed 250 characters');\n            return;\n        }\n\n        if (!selectedMemberId) {\n            this.showModal('Select a member to assign a chore');\n            return;\n\n        }\n\n        // Generate new IDs using uuidv4\n        const taskId = uuidv4();\n\n        // Create a new task object with the chore name, description, and user ID\n        const task = {\n            choreName: this.state.choreName,\n            choreDesc: this.state.choreDesc,\n            createdBy: firebase.auth().currentUser.uid,\n            currentlyAssignedTo: selectedMemberId,\n            lastCompletedBy: '',\n            lastCompletedAt: '',\n            roomId: selectedRoom.id,\n            taskId: taskId,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            taskId: taskId\n        };\n\n        // Get a reference to the tasks subcollection for the selected room\n        const tasksRef = firebase.firestore().collection('Rooms').doc(selectedRoom.id).collection('tasks');\n\n        try {\n            // Add the new task and assignment documents to their respective subcollections using the generated IDs\n            await tasksRef.doc(taskId).set(task);\n\n            // Show modal to tell user that the task was added successfully\n            this.showModal('Chore assigned successfully');\n\n\n            // Reset the input fields\n            this.setState({\n                choreName: '',\n                choreDesc: '',\n                selectedMember: '',\n            });\n            return;\n        } catch (error) {\n            this.setState({\n                isModalVisible: true,\n                modalMessage: error,\n            });\n        }\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n\n                <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/inAppColour.avif')} style={{\n                    position: 'absolute',\n                    zIndex: -1,\n                    width: '100%',\n                    height: '100%',\n                    opacity: 0.5,\n                    borderRadius: 20\n                }} />\n\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    backgroundColor: '#FEFFEB',\n                    height: '7.5%',\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    borderRadius: 20\n                }}>\n                    <Text style={styles.headerText}>Chores Do it</Text>\n                    <View style={styles.Iconleft}>\n                        <TouchableOpacity onPress={() => this.props.navigation.goBack()}>\n                            <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\n                        </TouchableOpacity>\n                    </View>\n                </View>\n\n                <View style={{\n                    paddingTop: '50%',\n                    paddingHorizontal: '5%'\n                }}>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Enter chore name\"\n                        onChangeText={(text) => this.setState({ choreName: text })}\n                        value={this.state.choreName}\n                    />\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Enter chore description\"\n                        onChangeText={(text) => this.setState({ choreDesc: text })}\n                        value={this.state.choreDesc}\n                    />\n\n                    <Picker\n                        style={styles.picker}\n                        selectedValue={this.state.selectedMember}\n                        onValueChange={(itemValue) =>\n                            this.setState({ selectedMember: itemValue })\n                        }>\n                        <Picker.Item label=\"Select a member\" value={null} />\n\n                        {/*  Render a list of Picker components based on the state variable members */}\n                        {this.state.members.map((member, index) => (\n                            // For each member, create a Picker.Item with a label and value\n                            <Picker.Item key={index} label={member} value={this.state.membersId[index]} />\n                        ))}\n                    </Picker>\n\n                    <TouchableOpacity style={styles.button} onPress={this.createTask}>\n                        <Text style={styles.buttonText}>Assign Chore</Text>\n                    </TouchableOpacity>\n                </View>\n                <Modal\n                    transparent={true}\n                    visible={this.state.isModalVisible}\n                    animationType='slide'\n                    onRequestClose={() => {\n                        this.closeModal();\n                    }}>\n                    <View style={styles.modal}>\n                        <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n                    </View>\n                </Modal>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 20,\n\n    },\n    headerText: {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: '600',\n        marginLeft: 50,\n    },\n    Iconleft: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        marginLeft: 15,\n        marginTop: 10,\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#D9D9D9',\n        borderRadius: 5,\n        width: '100%',\n        height: 50,\n        marginTop: 10,\n        paddingHorizontal: 10,\n        fontSize: 16,\n    },\n    picker: {\n        width: '100%',\n        marginTop: 10,\n        borderWidth: 1,\n        borderColor: '#D9D9D9',\n        borderRadius: 5,\n        height: 50,\n        backgroundColor: 'transparent'\n    },\n    button: {\n        backgroundColor: '#c8ada4',\n        padding: 10,\n        borderRadius: 5,\n        marginTop: 10,\n        width: '100%',\n    },\n    buttonText: {\n        color: '#FFFFFF',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    modalContainer: {\n        // flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modalText: {\n        color: 'white',\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        padding: 20,\n        backgroundColor: '#E2C2C6',\n        borderRadius: 10,\n    }\n});\n","import React, { Component } from 'react';\nimport { Text, TextInput, View, Image, Modal, TouchableOpacity, StyleSheet, FlatList, Picker } from 'react-native';\nimport firebase from '../config';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { Ionicons } from '@expo/vector-icons';\n\nexport default class ViewAllChores extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            userRoom: [],\n            chores: [],\n            members: [],\n            membersId: [],\n            selectedMember: '',\n            choreNameArr1: [],\n            choreDescArr1: [],\n            isModalVisible: false,\n            modalMessage: ''\n        };\n    }\n    //toggle and close modal\n    closeModal = () => {\n        this.setState({ isModalVisible: false });\n    };\n\n    showModal = (message) => {\n        this.setState({\n            isModalVisible: true,\n            modalMessage: message,\n        });\n        setTimeout(() => {\n            this.setState({ isModalVisible: false });\n        }, 2000);\n    };\n\n    // get room data to show if a user is a member of a room\n    getRooms = async () => {\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n        // Get a reference to the Rooms collection\n        const roomsRef = firebase.firestore().collection('Rooms');\n\n        try {\n            // Get all documents in the \"Rooms\" collection\n            const snapshot = await roomsRef.get();\n\n            // Initialise arrays to hold all rooms and the user's room\n            const rooms = [];\n            const userRoom = [];\n\n            // Loop through all documents in the \"Rooms\" collection\n            for (const doc of snapshot.docs) {\n                const data = doc.data();\n\n                // Create a new room object with the document ID, room name, members, and room URL\n                const room = {\n                    id: doc.id,\n                    roomName: data.roomName,\n                    members: data.members,\n                    roomURL: data.roomUrl,\n                    createdBy: data.createdBy,\n                    createdAt: data.createdAt,\n                };\n\n                // Add the new room object to the rooms array\n                rooms.push(room);\n\n                // Check if the members array includes the user's auth ID\n                if (room.members.includes(userId)) {\n                    userRoom.push(room);\n\n                    // Initialise array to hold member names\n                    const memberNames = [];\n                    const memberId = [];\n\n                    // Loop through all members in the room\n                    for (let i = 0; i < room.members.length; i++) {\n                        const member = room.members[i];\n                        const userRef = firebase.firestore().collection('users').doc(member);\n\n                        // Get user data for the member\n                        const userSnapshot = await userRef.get();\n                        const userData = userSnapshot.data();\n\n                        // Add member's user_id to the memberId array\n                        memberId.push(userData.user_id);\n\n                        // Add member's first and last names to the memberNames array\n                        memberNames.push(userData.firstName + ' ' + userData.lastName);\n                    }\n\n                    // Update state with the memberNames array\n                    this.setState({ members: memberNames });\n                    this.setState({ membersId: memberId });\n                }\n            }\n\n            // Loop through all rooms and add the user's room to the userRoom array\n            for (let i = 0; i < rooms.length; i++) {\n                const room = rooms[i];\n                // Check if the members array includes the user's auth ID\n                if (room.members.includes(userId)) {\n                    this.state.userRoom.push(room);\n                }\n            }\n\n            this.setState({ userRoom: this.state.userRoom });\n            // Get chores data after getting room data\n            return this.getChoresData();\n        }\n        catch (error) {\n            this.showModal('Error displaying room:', error);\n            return;\n        }\n    };\n\n    //shows all tasks\n    getChoresData = async () => {\n        //get roomId of current of of user\n        const roomId = this.state.userRoom[0].id;\n        //get reference to collection Rooms and subcollection tasks of users current room\n        const choresRef = firebase.firestore().collection('Rooms').doc(roomId).collection('tasks');\n        //check if user if logged in and uathenticated\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n\n        try {\n            //get snapshot all documents of subcollection tasks\n            const snapshot = await choresRef.get();\n            //innitialise array\n            const allChores = [];\n            const choreNameArr = [];\n            const choreDescArr = [];\n\n            // Loop through all docs in tasks, push data of chore in all chores, push data of chorename and chore desc within choreNameArr and choreDescArr\n            snapshot.forEach(doc => {\n                const choreData = doc.data();\n                allChores.push({ id: doc.id, ...doc.data() });\n                choreNameArr.push(choreData.choreName);\n                choreDescArr.push(choreData.choreDesc);\n            });\n            // Set states\n            this.setState({\n                chores: allChores,\n                choreNameArr1: choreNameArr,\n                choreDescArr1: choreDescArr\n            });\n            console.log('chore name', choreNameArr);\n            console.log('chore desc', choreDescArr);\n            console.log('Chores:', allChores);\n        }\n        catch (error) {\n            this.showModal('Error getting chores: ', error,);\n            return;\n        }\n    };\n\n    //Patch to reassign a chore only after 24 hours\n    reassignChore = async (chore) => {\n        //Check if user is logged in\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n        //Get room id of users current room\n        const roomId = this.state.userRoom[0].id;\n        //Get selected member from picker, store in currentlyAssignedTo\n        const currentlyAssignedTo = this.state.selectedMember;\n\n        let lastCompletedAt;\n        let hoursSinceLastCompleted;\n\n        // If there is a last completed timestamp for the chore, calculate the hours since last completed\n        if (chore.lastCompletedAt) {\n            lastCompletedAt = chore.lastCompletedAt.toDate();\n            const timeSinceLastCompleted = new Date() - lastCompletedAt;\n            hoursSinceLastCompleted = timeSinceLastCompleted / (1000 * 60 * 60);\n        }\n\n        // Check if 24 hours have passed since the last completed timestamp\n        if (hoursSinceLastCompleted && hoursSinceLastCompleted < 24) {\n            console.log('Cannot reassign chore until 24 hours have passed since it was last completed');\n            this.showModal('Cannot reassign chore until 24 hours have passed since it was last completed');\n            return;\n        }\n\n        // Otherwise within tasks find task where chore.id matches the taskId\n        firebase\n            .firestore()\n            .collection('Rooms')\n            .doc(roomId)\n            .collection('tasks')\n            .where('taskId', '==', chore.id)\n            .get()\n            .then((querySnapshot) => {\n                // Loop through the result set and update each matching task with the new assigned user\n                querySnapshot.forEach((doc) => {\n                    // Get a reference to the document and update the currentlyAssignedTo field with the new user\n                    const assignedDocRef = firebase\n                        .firestore()\n                        .collection('Rooms')\n                        .doc(roomId)\n                        .collection('tasks')\n                        .doc(doc.id);\n                    assignedDocRef.update({\n                        currentlyAssignedTo\n                    })\n                        .then(() => {\n                            this.showModal('Chore reassigned successfully:');\n                            return;\n                        })\n                        .catch((error) => {\n                            this.showModal('Error reassigning chore: ', error);\n                            return;\n                        });\n                });\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n            });\n    };\n\n\n    updateChoreData = async (chore, choreName, choreDesc) => {\n        //Check if user is logged in and authenticated\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n        try {\n            //Get room id of users current room\n            const roomId = this.state.userRoom[0].id;\n            //get task if of chore user wishes to update\n            const taskId = chore.taskId;\n            //Go to subcollection tasks of users room, set new states of choreName and choreDesc\n            firebase\n                .firestore()\n                .collection('Rooms')\n                .doc(roomId)\n                .collection('tasks')\n                .doc(taskId)\n                .update({\n                    choreName: choreName,\n                    choreDesc: choreDesc\n                })\n                .then(() => {\n                    this.showModal('Chore details updated');\n                    return;\n                })\n                .catch((error) => {\n                    this.showModal('Error updating chore: ', error);\n                    return;\n                });\n        }\n        catch (error) {\n            this.showModal('Error: ', error);\n            return;\n        }\n    };\n\n    //delete chore\n    deleteChore = async (chore) => {\n        //Check if user is logged in and authenticated\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n\n        try {\n            console.log(userId)\n            //get roomm id of users current room\n            const roomId = this.state.userRoom[0].id;\n            //get task id of selected room\n            const taskId = chore.taskId;\n            // Get a reference to the room document in Firestore\n            const choreRef = firebase.firestore().collection('Rooms').doc(roomId).collection('tasks').doc(taskId);\n            //Remove chore\n            await choreRef.delete();\n            this.getChoresData();\n\n            this.showModal('Chore removed');\n            return;\n        }\n        catch (error) {\n            this.showModal('Error deleting chat: ', error,);\n            return;\n        }\n    };\n\n    componentDidMount() {\n        this.getRooms();\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n\n                <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/inAppColour.avif')} style={{\n                    position: 'absolute',\n                    zIndex: -1,\n                    width: '100%',\n                    height: '100%',\n                    opacity: 0.5,\n                    borderRadius: 20,\n                }} />\n\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    backgroundColor: '#FEFFEB',\n                    height: '5%',\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    borderRadius: 20,\n                }}>\n                    <Text style={styles.headerText}>Chores Do it</Text>\n                    <View style={styles.Iconleft}>\n                        <TouchableOpacity onPress={() => this.props.navigation.goBack()}>\n                            <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\n                        </TouchableOpacity>\n                    </View>\n                </View>\n\n                <View style={styles.dataContainer}>\n                    <FlatList\n                        data={this.state.chores}\n                        renderItem={({ item, index }) => {\n                            return (\n                                <View style={styles.choreContainer}>\n                                    <View style={styles.choreName}>\n                                        <TextInput\n                                            style={styles.input}\n                                            //Set value text input to the index of choreNameArr1 or set it nothing\n                                            value={this.state.choreNameArr1[index] ?? ''}\n                                            //Call onchange text function, where user inputted data is stores within choreNameArr1 at given index\n                                            onChangeText={(choreName) => {\n                                                let choreNameArr1 = [...this.state.choreNameArr1];\n                                                choreNameArr1[index] = choreName;\n                                                this.setState({ choreNameArr1 });\n                                            }}\n                                        />\n                                    </View>\n                                    <View style={styles.choreName}>\n                                        <TextInput\n                                            style={styles.input}\n                                            //Set value text input to the index of choreDescArr1 or set it nothing\n                                            value={this.state.choreDescArr1[index] ?? ''}\n                                            //Call onchange text function, where user inputted data is stores within choreDescArr1 at given index\n                                            onChangeText={(choreDesc) => {\n                                                let choreDescArr1 = [...this.state.choreDescArr1];\n                                                choreDescArr1[index] = choreDesc;\n                                                this.setState({ choreDescArr1 });\n                                            }}\n                                        />\n                                    </View>\n                                    <View style={styles.pickerPadding}>\n                                        <Picker\n                                            style={styles.picker}\n                                            selectedValue={this.state.selectedMember}\n                                            onValueChange={(itemValue) =>\n                                                this.setState({ selectedMember: itemValue })\n                                            }>\n                                            <Picker.Item label=\"Select a member\" value={null} />\n                                            {/*  Render a list of Picker components based on the state variable members */}\n                                            {this.state.members.map((member, index) => (\n                                                // For each member, create a Picker.Item with a label and value\n                                                <Picker.Item key={index} label={member} value={this.state.membersId[index]} />\n                                            ))}\n                                        </Picker>\n                                    </View >\n\n                                    <TouchableOpacity\n                                        style={styles.updateDataButton}\n                                        onPress={() => {\n                                            if (!this.state.selectedMember) {\n                                                console.log('Please select a member before reassigning the chore');\n                                                return;\n                                            }\n                                            this.reassignChore(item);\n                                        }}>\n                                        <Text style={styles.saveDataText}>Save chore reassignment</Text>\n                                    </TouchableOpacity>\n\n                                    <TouchableOpacity\n                                        style={styles.updateDataButton}\n                                        //Pass this.state.choreNameArr1[index], this.state.choreDescArr1[index] into updateChoreData function\n                                        onPress={() => this.updateChoreData(item, this.state.choreNameArr1[index], this.state.choreDescArr1[index])}>\n                                        <Text style={styles.saveDataText}>Update chore</Text>\n                                    </TouchableOpacity>\n\n                                    <TouchableOpacity\n                                        style={styles.deleteIcon}\n                                        onPress={() => this.deleteChore(item)}>\n                                        <MaterialIcons name={'delete'} size={30} />\n                                    </TouchableOpacity>\n\n                                </View>\n                            );\n                        }\n                        }\n                        keyExtractor={item => item.id}\n                    />\n                </View >\n                <Modal\n                    transparent={true}\n                    visible={this.state.isModalVisible}\n                    animationType='slide'\n                    onRequestClose={() => {\n                        this.closeModal();\n                    }}>\n                    <View style={styles.modal}>\n                        <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n                    </View>\n                </Modal>\n            </View >\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 20,\n    },\n    headerText: {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: '600',\n        marginLeft: 50,\n    },\n    Iconleft: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        marginLeft: 15,\n        marginTop: 10,\n    },\n    dataContainer: {\n        width: '90%',\n        flex: 1,\n        paddingLeft: 40\n    },\n    choreContainer: {\n        height: '100%'\n    },\n    input: {\n        marginTop: 15,\n        paddingHorizontal: 10,\n        fontSize: 16,\n    },\n    picker: {\n        width: '100%',\n        marginTop: 10,\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 5,\n        height: 50,\n        backgroundColor: 'transparent',\n    },\n    choreName: {\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 5,\n        width: '100%',\n        height: 50,\n        marginTop: 10,\n    },\n    pickerPadding: {\n        width: '100%',\n        height: 50,\n        paddingBottom: 10,\n    },\n    updateDataButton: {\n        width: '100%',\n        backgroundColor: '#DDDDDD',\n        padding: 10,\n        marginTop: 10,\n        borderRadius: 5,\n    },\n    saveDataText: {\n        textAlign: 'center',\n        fontSize: 18,\n        fontWeight: '600',\n    },\n    buttonStyles: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n    deleteIcon: {\n        marginRight: 10,\n        marginTop: 10,\n        paddingLeft: '40%'\n    },\n    modalContainer: {\n        // flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modalText: {\n        color: 'white',\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        padding: 20,\n        backgroundColor: '#E2C2C6',\n        borderRadius: 10,\n    }\n});\n","import React, { Component } from 'react';\nimport { Text, TextInput, View, Image, Modal, TouchableOpacity, StyleSheet } from 'react-native';\nimport firebase from '../config';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FlatList } from 'react-native-gesture-handler';\n\nclass ShoppingList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            userRoom: [],\n            shoppingItem: '',\n            itemPrice: '',\n            isModalVisible: false,\n            modalMessage: ''\n        };\n    }\n\n    //Toggle and close modal\n    closeModal = () => {\n        this.setState({ isModalVisible: false });\n    };\n\n    showModal = (message) => {\n        this.setState({\n            isModalVisible: true,\n            modalMessage: message,\n        });\n        setTimeout(() => {\n            this.setState({ isModalVisible: false });\n        }, 2000);\n    };\n    componentDidMount() {\n        this.getRooms();\n        this.interval = setInterval(() => this.getItemData(), 8000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    // get room data to show if a user is a member of a room\n    getRooms = async () => {\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n        // Get a reference to the Rooms collection\n        const roomsRef = firebase.firestore().collection('Rooms');\n\n        try {\n            // Get all documents in the \"Rooms\" collection\n            const snapshot = await roomsRef.get();\n\n            // Initialise arrays to hold all rooms and the user's room\n            const rooms = [];\n            const userRoom = [];\n\n            // Loop through all documents in the \"Rooms\" collection\n            for (const doc of snapshot.docs) {\n                const data = doc.data();\n\n                // Create a new room object with the document ID, room name, members, and room URL\n                const room = {\n                    id: doc.id,\n                    roomName: data.roomName,\n                    members: data.members,\n                    roomURL: data.roomUrl,\n                    createdBy: data.createdBy,\n                    createdAt: data.createdAt,\n                };\n\n                // Add the new room object to the rooms array\n                rooms.push(room);\n\n                // Check if the members array includes the user's auth ID\n                if (room.members.includes(userId)) {\n                    userRoom.push(room);\n\n                    // Initialise array to hold member names\n                    const memberNames = [];\n                    const memberId = [];\n\n                    // Loop through all members in the room\n                    for (let i = 0; i < room.members.length; i++) {\n                        const member = room.members[i];\n                        const userRef = firebase.firestore().collection('users').doc(member);\n\n                        // Get user data for the member\n                        const userSnapshot = await userRef.get();\n                        const userData = userSnapshot.data();\n\n                        // Add member's user_id to the memberId array\n                        memberId.push(userData.user_id);\n\n                        // Add member's first and last names to the memberNames array\n                        memberNames.push(userData.firstName + ' ' + userData.lastName);\n                    }\n                }\n            }\n\n            // Loop through all rooms and add the user's room to the userRoom array\n            for (let i = 0; i < rooms.length; i++) {\n                const room = rooms[i];\n                // Check if the members array includes the user's auth ID\n                if (room.members.includes(userId)) {\n                    this.state.userRoom.push(room);\n                }\n            }\n\n            this.setState({ userRoom: this.state.userRoom });\n            // Get chores data after getting room data\n            return this.getItemData();\n        }\n        catch (error) {\n            this.showModal('Error displaying room:', error);\n            return;\n        }\n    };\n\n    //Creating a task\n    addItem = async () => {\n\n        // Get the selected room object from state\n        const selectedRoom = this.state.userRoom[0];\n        console.log(selectedRoom)\n\n        //Check if user is logged in \n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n\n        // Validate inputs\n        if (!this.state.shoppingItem || !this.state.itemPrice) {\n            this.showModal('All fields must be entered');\n            return;\n        }\n        if (!/^\\d+(\\.\\d+)?$/.test(this.state.itemPrice) && !/^\\d+$/.test(this.state.itemPrice)) {\n            this.showModal('Incorrect price');\n            return;\n        }\n\n        // Generate new IDs using uuidv4\n        const shoppingItemId = uuidv4();\n\n        // Create a new item object with the item name and price\n        const items = {\n            shoppingItem: this.state.shoppingItem,\n            itemPrice: this.state.itemPrice,\n            createdBy: firebase.auth().currentUser.uid,\n            shoppingItemId: shoppingItemId\n        };\n\n        // Get a reference to the shoppingList subcollection for the selected room\n        const shoppingRef = firebase.firestore().collection('Rooms').doc(selectedRoom.id).collection('shoppingList');\n\n        try {\n            // Add the new item to their respective subcollections using the generated IDs\n            await shoppingRef.doc(shoppingItemId).set(items);\n\n            // Show modal to tell user that the task was added successfully\n            this.showModal('Shopping item added successfully');\n\n\n            // Reset the input fields\n            this.setState({\n                shoppingItem: '',\n                itemPrice: '',\n\n            });\n            this.getItemData();\n            return;\n        } catch (error) {\n            this.setState({\n                isModalVisible: true,\n                modalMessage: error,\n            });\n        }\n    }\n\n    //delete item\n    deleteItem = async (items) => {\n        //Check if user is logged in and authenticated\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n\n        try {\n            //get roomm id of users current room\n            const roomId = this.state.userRoom[0].id;\n            //get item id of selected room\n            const shoppingItemId = items.shoppingItemId;\n            // Get a reference to the room document in Firestore\n            const itemRef = firebase.firestore().collection('Rooms').doc(roomId).collection('shoppingList').doc(shoppingItemId);\n            //Remove item\n            await itemRef.delete();\n            this.getItemData();\n            this.showModal('Item removed');\n            return;\n        }\n        catch (error) {\n            this.showModal('Error deleting chat: ', error,);\n            return;\n        }\n    };\n\n    //shows all tasks\n    getItemData = async () => {\n        //get roomId of current of of user\n        const selectedRoom = this.state.userRoom[0];\n        console.log(selectedRoom)\n        //get reference to collection Rooms and subcollection tasks of users current room\n        const itemRef = firebase.firestore().collection('Rooms').doc(selectedRoom.id).collection('shoppingList');\n        //check if user if logged in and uathenticated\n        const userId = firebase.auth().currentUser.uid;\n        if (!userId) {\n            this.showModal('User is not authenticated');\n            return;\n        }\n\n        try {\n            //get snapshot all documents of subcollection tasks\n            const snapshot = await itemRef.get();\n            //innitialise array\n            const allItems = [];\n\n            // Loop through all docs in tasks, push data of chore in all chores, push data of chorename and chore desc within choreNameArr and choreDescArr\n            snapshot.forEach(doc => {\n                allItems.push({ id: doc.id, ...doc.data() });\n            });\n            // Set states\n            this.setState({\n                items: allItems,\n            });\n            console.log('items: ' + allItems)\n        }\n        catch (error) {\n            this.showModal('Error getting items: ', error,);\n            return;\n        }\n    };\n\n    render() {\n\n        const navigation = this.props.navigation;\n        return (\n\n            <View style={styles.container}>\n                <Image source={require('/Users/adilbadat/Documents/MobileApp/House-Hold-Chores/House-Hold-App/assets/inAppColour.avif')} style={{\n                    position: 'absolute',\n                    zIndex: -1,\n                    width: '100%',\n                    height: '100%',\n                    opacity: 0.5,\n                    borderRadius: 20\n                }} />\n\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    backgroundColor: '#FEFFEB',\n                    height: '8%',\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    borderRadius: 20\n                }}>\n                    <Text style={styles.headerText}>Chores Do it</Text>\n                </View>\n\n                <View style={styles.inputContainer}>\n                    <TextInput\n                        style={styles.inputBoxItem}\n                        placeholder=\"Items\"\n                        placeholderTextColor=\"gray\"\n                        onChangeText={(text) => this.setState({ shoppingItem: text })}\n                        value={this.state.shoppingItem}\n                    />\n                    <TextInput\n                        style={styles.inputBoxPrice}\n                        placeholder=\"£\"\n                        placeholderTextColor=\"gray\"\n                        onChangeText={(text) => this.setState({ itemPrice: text })}\n                        value={this.state.itemPrice}\n                    />\n\n                    <TouchableOpacity onPress={this.addItem} style={styles.addButton}>\n                        <Text style={styles.addButtonLabel}>Add</Text>\n                    </TouchableOpacity>\n                </View>\n\n                <View style={styles.dataContainer}>\n                    <FlatList\n                        data={this.state.items}\n                        renderItem={({ item }) => (\n                            <View style={styles.itemContainer}>\n                                <View style={styles.itemInfo}>\n                                    <Text style={styles.itemName}>{item.shoppingItem}</Text>\n                                    <Text style={styles.itemPrice}> £{item.itemPrice}</Text>\n                                    <TouchableOpacity\n                                        style={styles.deleteIcon}\n                                        onPress={() => this.deleteItem(item)}>\n                                        <MaterialIcons name={'delete'} size={30} />\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                        )}\n                        keyExtractor={(item) => item.id}\n                    />\n                </View>\n\n                <Modal\n                    transparent={true}\n                    visible={this.state.isModalVisible}\n                    animationType='slide'\n                    onRequestClose={() => {\n                        this.closeModal();\n                    }}\n                >\n                    <View style={styles.modal}>\n                        <Text style={styles.modalText}>{this.state.modalMessage}</Text>\n                    </View>\n                </Modal>\n\n\n            </View >\n        );\n    }\n}\n\nexport default ShoppingList\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 20,\n    },\n    headerText: {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: '600',\n        marginLeft: 20,\n    },\n    inputContainer: {\n        paddingTop: '2%',\n        paddingHorizontal: '5%',\n    },\n    inputBoxItem: {\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 5,\n        height: 50,\n        marginTop: 10,\n        fontSize: 16,\n        paddingHorizontal: 10,\n    },\n    inputBoxPrice: {\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 5,\n        width: '20%',\n        height: 50,\n        marginTop: 10,\n        fontSize: 16,\n        paddingHorizontal: 10,\n    },\n    addButton: {\n        backgroundColor: '#FEFFEB',\n        borderRadius: 5,\n        height: 50,\n        marginTop: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    addButtonLabel: {\n        color: 'black',\n        fontSize: 16,\n        fontWeight: '600',\n    },\n    dataContainer: {\n        flex: 1,\n        paddingTop: '2%',\n        paddingHorizontal: '5%',\n    },\n    itemContainer: {\n        backgroundColor: '#FEFFEB',\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n        marginBottom: 10,\n    },\n    itemInfo: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    itemName: {\n        fontSize: 16,\n        fontWeight: '600',\n    },\n    itemPrice: {\n        fontSize: 14,\n        color: 'gray',\n    },\n    deleteIcon: {\n        marginRight: 10,\n        marginTop: 10,\n        paddingLeft: '40%'\n    },\n    modalContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modalText: {\n        color: 'white',\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        padding: 20,\n        backgroundColor: '#E2C2C6',\n        borderRadius: 10,\n    }\n});","import React, { Component } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport firebase from './config';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useNavigation } from '@react-navigation/native';\n\nimport Login from './src/Login';\nimport SignUp from './src/Signup';\nimport HomePage from './src/HomePage';\nimport Profile from './src/Profile';\nimport CreateRoom from './src/CreateRoom';\nimport SearchUser from './src/SearchUser';\nimport JoinRoom from './src/JoinRoom';\nimport JoinRoomByName from './src/JoinRoomByName';\nimport AssignChore from './src/AssignChore';\nimport ViewAllChores from './src/ViewAllChores';\nimport ShoppingList from './src/ShoppingList';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst HomeTab = () => {\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name='HomePage' component={HomePage} options={{ headerShown: false }} />\n      <Tab.Screen name='ShoppingList' component={ShoppingList} options={{ headerShown: false }} />\n      <Tab.Screen name='Profile' component={Profile} options={{ headerShown: false }} />\n    </Tab.Navigator>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialising: true,\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    this.authSubscriber = firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user: user,\n        initialising: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.authSubscriber();\n  }\n\n  render() {\n    const { initialising, user } = this.state;\n\n    if (initialising) {\n      return null;\n    }\n\n    if (!user) {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName='Login'>\n            <Stack.Screen name='Login' component={Login} options={{ headerShown: false }} />\n            <Stack.Screen name='SignUp' component={SignUp} options={{ headerShown: false }} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    } else if (user && this.state.registered) {\n      // Redirect user to Login screen after successful registration\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName='Login'>\n            <Stack.Screen name='Login' component={Login} options={{ headerShown: false }} />\n            <Stack.Screen name='SignUp' component={SignUp} options={{ headerShown: false }} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    } else {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName='HomeTab'>\n            <Stack.Screen name='HomeTab' component={HomeTab} options={{ headerShown: false }} />\n            <Stack.Screen name='CreateRoom' component={CreateRoom} options={{ headerShown: false }} />\n            <Stack.Screen name='SearchUser' component={SearchUser} options={{ headerShown: false }} />\n            <Stack.Screen name='JoinRoom' component={JoinRoom} options={{ headerShown: false }} />\n            <Stack.Screen name='JoinRoomByName' component={JoinRoomByName} options={{ headerShown: false }} />\n            <Stack.Screen name='AssignChore' component={AssignChore} options={{ headerShown: false }} />\n            <Stack.Screen name='ViewAllChores' component={ViewAllChores} options={{ headerShown: false }} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [346], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","_Component","_inherits","Login","_super","_createSuper","props","_this","_classCallCheck","call","closeModal","setState","isModalVisible","showModal","message","modalMessage","setTimeout","loginUser","_ref","_asyncToGenerator","email","password","signInWithEmailAndPassword","navigation","navigate","error","code","_x","_x2","apply","arguments","login","validData","_this$state","state","_this$state2","_createClass","key","value","_this2","this","_jsxs","View","style","styles","container","children","_jsx","Image","source","require","position","zIndex","width","height","opacity","Text","title","TextInput","emailPasswordInput","placeholder","onChangeText","placeholderTextColor","secureTextEntry","TouchableOpacity","loginButton","onPress","createButton","Modal","transparent","visible","animationType","onRequestClose","modal","modalText","Component","StyleSheet","flex","backgroundColor","alignItems","justifyContent","paddingTop","paddingHorizontal","color","fontSize","fontWeight","marginVertical","borderWidth","borderColor","padding","textAlign","borderRadius","modalContainer","SignUp","validateEmail","validator","validatePassword","registerUser","firstName","lastName","user","createUserWithEmailAndPassword","collection","doc","uid","set","user_id","console","log","_x3","_x4","signUp","confirmPassword","HomePage","getRooms","userId","currentUser","roomsRef","snapshot","get","rooms","forEach","data","room","id","roomName","members","roomURL","roomUrl","createdBy","createdAt","push","i","length","includes","userRoom","getChoresData","chores","roomId","choresRef","docs","map","_ref3","assignedUserId","currentlyAssignedTo","_userDoc$data","_objectSpread","assignedChores","Promise","all","filter","chore","undefined","handleChoreCheck","where","then","querySnapshot","taskData","ref","update","lastCompletedAt","lastCompletedBy","catch","leaveRoom","_ref4","roomRef","taskRef","name","updatedChores","exists","interval","setInterval","unsubscribe","onAuthStateChanged","addListener","clearInterval","_this3","userIsInRoom","SafeAreaView","flexDirection","houseName","houseNameText","paddingBottom","borderBottomWidth","top","right","paddingVertical","marginRight","disabled","dataContainer","FlatList","keyExtractor","item","renderItem","_ref5","choreContainer","choreName","choreNameText","choreDescText","choreDesc","assignedToText","completeButton","MaterialIcons","size","bottom","ViewStyle","imageStyle","addStyle","addimageStyle","paddingLeft","marginTop","marginBottom","paddingRight","marginLeft","Profile","getInfo","userRef","userData","updateInfo","users","loading","headerText","inputBox","text","buttonDesign","buttonDesignText","signOut","CreateRoom","createRoom","uuidv4","roomNameQuery","empty","runTransaction","_ref2","transaction","isLoading","Iconleft","goBack","Ionicons","Roomname","button","buttonText","left","SearchUser","checkIsAvailablity","isMailAvailable","MailComposer","isAvailableAsync","isAvailable","searchUsers","query","searchQuery","toLowerCase","results","searchResults","sendEmail","route","params","urlWithRoomId","composeAsync","subject","body","recipients","input","Button","_route$params","useRoute","useEffect","JoinRoomByName","joinRoom","trim","userRoomsRef","roomData","roomMembers","roomInput","AssignChore","memberNames","memberId","member","membersId","createTask","selectedRoom","selectedMemberId","selectedMember","taskId","task","tasksRef","Picker","picker","selectedValue","onValueChange","itemValue","label","index","ViewAllChores","allChores","choreNameArr","choreDescArr","choreData","choreNameArr1","choreDescArr1","reassignChore","hoursSinceLastCompleted","toDate","Date","updateChoreData","deleteChore","choreRef","delete","_x5","_ref6","_this2$state$choreNam","_this2$state$choreDes","_toConsumableArray","pickerPadding","updateDataButton","saveDataText","deleteIcon","buttonStyles","ShoppingList","getItemData","addItem","shoppingItem","itemPrice","test","shoppingItemId","items","shoppingRef","deleteItem","itemRef","allItems","inputContainer","inputBoxItem","inputBoxPrice","addButton","addButtonLabel","itemContainer","itemInfo","itemName","Stack","createStackNavigator","Tab","createBottomTabNavigator","HomeTab","Navigator","Screen","component","options","headerShown","App","initialising","authSubscriber","registered","NavigationContainer","initialRouteName","JoinRoom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}